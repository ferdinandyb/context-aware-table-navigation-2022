base_global_planner: navfn/NavfnROS
#name of the plugin for the global planner to use with move_base
controller_frequency: 20.0
#the rate in Hz at which to run the control loop and send velocity commands to the base
planner_patience: 5.0
#how long the planner waits in sec in an attempt to find a valid plan before space-clearing operations are performed
controller_patience: 15.0
#how long the controller will wait in sec without receiving a valid control before space-clearing operations are performed
conservative_reset_dist: 3.0
#distance away from the robot in meters beyond which obstacles will be cleared from the costmap when attempting to clear space. only used with recovery behaviors
recovery_behavior_enabled: true
clearing_rotation_allowed: false
shutdown_costmaps: false
#determines whether or not to shutdown the costmap of the node when move_base is on an inactive state
oscillation_timeout: 0.0
#how long in seconds to allow for oscillation before executing recovery behaviors. 0.0 is infinite timeout
oscillation_distance: 0.5
#how far in meters the robot must move to be considered not to be oscillating. Moving this far resets the timer counting up to the oscillation_timeout
planner_frequency: 0.2
#the rate in Hz at which to run the global planning loop


recovery_behaviors:
 - name: 'conservative_reset'
   type: 'clear_costmap_recovery/ClearCostmapRecovery'
 - name: 'rotate_recovery'
   type: 'rotate_recovery/RotateRecovery'
 - name: 'aggressive_reset'
   type: 'clear_costmap_recovery/ClearCostmapRecovery'

conservative_reset:
 reset_distance: 3
 layer_names: ['obstacle_layer']
aggressive_reset:
 reset_distance: 0.0
 layer_names: ['obstacle_layer']

#clearing_radius: 0.59
#footprint_padding: 0.03

#footprint: [[0.133, 0.19],
 #           [0.203, 0.115],
  #          [0.203, -0.115],
   #         [0.133, -0.19],
    #        [-0.123, -0.19],
     #       [-0.203, -0.103],
      #      [-0.203, 0.103],
       #     [-0.123, 0.19]]
